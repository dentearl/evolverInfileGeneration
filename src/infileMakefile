# This Makefile by dent earl, dearl(a) soe ucsc edu
# 31 March 2010
# 
# This Makefile is used to generate an infile set used as the 
# ancestor or root genome for an evolver genome simulation run.
#
# This Makefile assumes you have the kent source tree compiled. Specifically
# we assume the installation and configuration of
# * hgsql
# * bedToGenePred
# * genePredToGtf
##################################################
# Copyright (C) 2009-2011 by
# Dent Earl (dearl@soe.ucsc.edu, dentearl@gmail.com)
# Benedict Paten (benedict@soe.ucsc.edu, benedictpaten@gmail.com)
# Mark Diekhans (markd@soe.ucsc.edu)
# ... and other members of the Reconstruction Team of David Haussler's
# lab (BME Dept. UCSC)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
##################################################
SHELL:=/bin/bash -e
export SHELLOPTS=pipefail
projectDir:= .
rawPath:= ${projectDir}/raw
intPath:= ${projectDir}/intermediates
rootPath:= ${projectDir}/root
logPath:= ${projectDir}/logs
statsPath:= ${projectDir}/stats
MODEL:= 
DATABASE:=hg19
GENOME:= root #$(shell basename $$(pwd))
.PHONY: all rawData sequence annotations stats
.SECONDARY: # leave this blank to force make to keep intermediate files
##############################
# MAKE EDITS TO THE chr VARIABLE TO CHANGE THE
# INFILE GENOME
##############################
testSet:=NO
##############################
ifeq ($(testSet), YES)
	chrs:= 22_random 19_random
else
	chrs:= 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 X
endif
gtfs:= mgcGenes knownGene knownGeneOld5 cpgIslandExt ensGene
#
# DO NOT EDIT BELOW THIS LINE
##################################################
all: rawData sequence annotations stats
	@echo All work complete.
##################################################

stats: ${statsPath}/expanded_annots.gff ${statsPath}/annotstats.txt
	@echo Stats complete.
##################################################
# This section takes the gtf files and creates the 
# first set of stats files.
${statsPath}/annotstats.txt: annots.gff seq.rev
	@mkdir -p $(dir $@) ${logPath}
	evolver_evo -annotstats annots.gff -seq seq.rev -log $@.tmp
	mv $@.tmp $@
${statsPath}/expanded_annots.gff: ${statsPath}/introns.gff ${statsPath}/exons.gff ${rootPath}/root.annots.gff
	@mkdir -p $(dir $@) ${logPath}
	cat $^ > $@.tmp
	mv $@.tmp $@
${statsPath}/introns.gff: ${statsPath}/exons.gff ${statsPath}/cds_annots.gff ${rootPath}/root.annots.gff
	@mkdir -p $(dir $@) ${logPath}
	evolver_gff_exons2introns.py $< > $@.tmp
	mv $@.tmp $@
${statsPath}/exons.gff: ${statsPath}/cds_annots.gff ${rootPath}/root.annots.gff
	@mkdir -p $(dir $@) ${logPath}
	evolver_gff_cdsutr2exons.py $< > $@.tmp
	mv $@.tmp $@
${statsPath}/cds_annots.gff: ${rootPath}/root.annots.gff ${statsPath}/merged_root.stats.txt ${statsPath}/merged_branch.stats.txt
	@mkdir -p $(dir $@) ${logPath}
	(egrep 'CDS|UTR' $< || true) | cat > $@.tmp
	mv $@.tmp $@
${statsPath}/merged_root.stats.txt:
	@mkdir -p $(dir $@) ${logPath}
	touch $@
${statsPath}/merged_branch.stats.txt:
	@mkdir -p $(dir $@) ${logPath}
	touch $@

annotations: annots.gff
	@echo Annotations complete.
##################################################
# This section takes the gtf files, corrects for the new
# N-less coordinate space, merges the gtfs, and creates a 
# single gtf annotation
annots.gff: ${rootPath}/root.annots.gff $(foreach chr, $(chrs), ${intPath}/chr${chr}.genes.cov.gff)
	cp $< $@
${rootPath}/root.annots.gff: $(foreach chr, $(chrs), ${intPath}/chr${chr}.x.annots.gff)
	@mkdir -p $(dir $@) ${logPath}
	cat $^ > $@.tmp
	mv $@.tmp $@
${intPath}/chr%.genes.cov.gff: ${intPath}/chr%.gene_lengths
	@mkdir -p $(dir $@) ${logPath}
	evolver_cvt -gffcover ${intPath}/chr$*.gene_lengths -out $@.tmp -log ${logPath}/chr$*.genecover.log
	mv $@.tmp $@
${intPath}/chr%.gene_lengths: ${intPath}/chr%.x.annots.gff
	@mkdir -p $(dir $@) ${logPath}
	evolver_gff_gene_lengths.py $< > $@.tmp
	mv $@.tmp $@
${intPath}/chr%.x.annots.gff: ${intPath}/chr%.unsorted.gff
	@mkdir -p $(dir $@) ${logPath}
	evolver_gff_sort.py $< > $@.tmp
	mv $@.tmp $@
${intPath}/chr%.unsorted.gff: ${intPath}/chr%.fixedcpg.gff ${intPath}/chr%.ces.probs.gff ${intPath}/chr%.trfannots.gff
	@mkdir -p $(dir $@) ${logPath}
	cat $^ > $@.tmp
	mv $@.tmp $@
${intPath}/chr%.fixedcpg.gff: ${intPath}/chr%.cpg.x.gff ${intPath}/chr%.ces.gff
	@mkdir -p $(dir $@) ${logPath}
	evolver_evo -fixcpgs $< -cds ${intPath}/chr$*.ces.gff -out $@.tmp -log ${logPath}/chr$*.fixcpgs.log
	mv $@.tmp $@
${intPath}/chr%.ces.probs.gff: ${intPath}/chr%.ces.gff
	@mkdir -p $(dir $@) ${logPath}
	evolver_evo -assprobs $< -log ${logPath}/chr$*.assprobs.log -out $@.tmp
	mv $@.tmp $@
${intPath}/chr%.ces.gff: ${intPath}/chr%.ncces.ass.gff ${intPath}/chr%.genes.x.gff.tmp
	@mkdir -p $(dir $@) ${logPath}
	cat $<  ${intPath}/chr$*.genes.x.gff.tmp > $@.tmp
	mv $@.tmp $@
${intPath}/chr%.ncces.ass.gff: ${intPath}/chr%.ncces.gff ${intPath}/chr%.x.seq.rev ${intPath}/chr%.genes.x.gff.tmp
	@mkdir -p $(dir $@) ${logPath}
	SEQLEN=$$(grep -a "  chr$*" ${logPath}/chr$*.seqlength.log | awk '{ print $$3 }') && \
		evolver_evo -assncces $< -genes ${intPath}/chr$*.genes.x.gff.tmp -length $$SEQLEN \
		-log ${logPath}/chr$*.assncces.log -out $@.tmp -model $(MODEL)
	mv $@.tmp $@
${intPath}/chr%.ncces.gff: ${intPath}/chr%.genes.x.gff.tmp ${intPath}/chr%.x.seq.rev
	@mkdir -p $(dir $@) ${logPath}
	SEQLEN=$$(grep -a "  chr$*" ${logPath}/chr$*.seqlength.log | awk '{ print $$3 }') && \
		evolver_evo -genncces -excl_gff $< -length $$SEQLEN -log ${logPath}/chr$*.genncces.log \
		-out $@.tmp -model $(MODEL)
	mv $@.tmp $@
${intPath}/chr%.cpg.x.gff: ${intPath}/chr%.cpg.gff ${intPath}/chr%.x.fa
	@mkdir -p $(dir $@) ${logPath}
	evolver_evo -xgff $< -gff_ns ${intPath}/chr$*.ns.gff -out $@.tmp -log ${logPath}/chr$*.xgffcpg.log
	mv $@.tmp $@
${intPath}/chr%.cpg.gff: ${rawPath}/cpgIslandExt.gtf
	@mkdir -p $(dir $@) ${logPath}
	(grep -Pa '^chr$*\t' $< | sed -e 's/exon/island/' || true ) > $@.tmp
	mv $@.tmp $@
${intPath}/chr%.genes.x.gff.tmp: ${intPath}/chr%.genes.x.gff ${intPath}/chr%.x.seq.rev
	@mkdir -p $(dir $@) ${logPath}
	evolver_evo -cvtannots $< -out $@.tmp -seq ${intPath}/chr$*.x.seq.rev -log ${logPath}/chr$*.cvtannots.log
	mv $@.tmp $@
${intPath}/chr%.genes.x.gff: ${intPath}/chr%.genes.gtf ${intPath}/chr%.x.fa
	@mkdir -p $(dir $@) ${logPath}
	evolver_evo -xgff $< -gff_ns ${intPath}/chr$*.ns.gff -out $@.tmp -log ${logPath}/chr$*.xgff.log
	mv $@.tmp $@
${intPath}/chr%.genes.gtf: ${intPath}/chr%.genes.unsorted.gtf
	@mkdir -p $(dir $@) ${logPath}
	evolver_gff_sort.py $< > $@.tmp
	mv $@.tmp $@
${intPath}/chr%.genes.unsorted.gtf: $(foreach gtf, $(gtfs), $(join ${rawPath}/${gtf}, .gtf)) 
	@mkdir -p $(dir $@) ${logPath}
	(grep -Pa '^chr$*\t' ${rawPath}/knownGene.gtf || true)     | evolver_gtfStopCodonMerger.py |\
		sed -e "s/_id \"/_id \"ucsc./g"     >  $@.tmp
	(grep -Pa '^chr$*\t' ${rawPath}/mgcGenes.gtf || true)      | evolver_gtfStopCodonMerger.py |\
		sed -e "s/_id \"/_id \"mgc./g"      >> $@.tmp
	(grep -Pa '^chr$*\t' ${rawPath}/knownGeneOld5.gtf || true) | evolver_gtfStopCodonMerger.py |\
		sed -e "s/_id \"/_id \"oldknown./g" >> $@.tmp
	(grep -Pa '^chr$*\t' ${rawPath}/ensGene.gtf || true)       | evolver_gtfStopCodonMerger.py |\
		sed -e "s/_id \"/_id \"ens./g"      >> $@.tmp
	mv $@.tmp $@
${intPath}/chr%.trfannots.gff: ${intPath}/chr%.x.fa.dat.tmp
	@mkdir -p $(dir $@) ${logPath}
	evolver_trf2gff.py $< > $@.tmp
	mv $@.tmp $@
${intPath}/chr%.x.fa.dat.tmp: ${intPath}/chr%.x.fa
	@mkdir -p $(dir $@) ${logPath}
	LOCALDIR=$$(pwd); \
		trfWrapper.py $$LOCALDIR/${intPath}/chr$*.x.fa 2 7 7 80 10 50 500 -d -h
	mv ${intPath}/chr$*.x.fa.2.7.7.80.10.50.500.dat $@

sequence: $(foreach chr, $(chrs), ${intPath}/chr${chr}.x.seq.rev) seq.rev
	@echo Sequences complete.
##################################################
# This section takes the fasta files, finds all the Ns
# and then removes them, and then creates the .rev files.
seq.rev: ${rootPath}/root.seq.rev
	cp $< $@.tmp
	mv $@.tmp $@
${rootPath}/root.seq.rev: ${intPath}/root.fa
	@mkdir -p $(dir $@) ${logPath}
	evolver_cvt -fromfasta $< -torev $@.tmp -genome ${GENOME}
	mv $@.tmp $@
${intPath}/root.fa: $(foreach chr, $(chrs), ${intPath}/chr${chr}.x.fa)
	@mkdir -p $(dir $@) ${logPath}
	cat $^ > $@.tmp
	mv $@.tmp $@
${intPath}/chr%.x.seq.rev: ${intPath}/chr%.x.fa
	@mkdir -p $(dir $@) ${logPath}
	evolver_cvt -fromfasta $< -torev $@.tmp -genome ${GENOME} -log ${logPath}/chr$*.cvtrev.log
	evolver_cvt -dumpchrids $@.tmp -log ${logPath}/chr$*.seqlength.log
	mv $@.tmp $@
${intPath}/chr%.x.fa: ${rawPath}/chr%.fa
	@mkdir -p $(dir $@) ${logPath}
	evolver_evo -findns $< -out_x $@.tmp -out_gff ${intPath}/chr$*.ns.gff -label_x chr$* -log ${logPath}/chr$*.findns.log
	mv $@.tmp $@

rawData: $(foreach chr, $(chrs), $(join ${rawPath}/chr${chr}, .fa)) $(foreach gtf, $(gtfs), $(join ${rawPath}/${gtf}, .gtf))
	@echo Raw data complete.
##################################################
# This section extracts data from UCSC and prepares it
# to be used to generate infiles.
${rawPath}/chr%.fa: ${rawPath}/chr%.fa.gz
	@mkdir -p $(dir $@) ${logPath}
	gunzip -c $<  > $@.tmp
	mv $@.tmp $@
${rawPath}/chr%.fa.gz:
	@mkdir -p $(dir $@) ${logPath}
	curl http://hgdownload.cse.ucsc.edu/goldenPath/${DATABASE}/chromosomes/chr$*.fa.gz --create-dirs -o $@.tmp
	mv $@.tmp $@
${rawPath}/:
	@mkdir -p $(dir $@) ${logPath}
	@mkdir -p ${logPath} ${intPath} ${rootPath} ${statsPath}
${rawPath}/%.gtf: ${rawPath}/%.gp
	@mkdir -p $(dir $@) ${logPath}
	genePredToGtf file $< $@.tmp
	mv $@.tmp $@
${rawPath}/mgcGenes.gp:
	@mkdir -p $(dir $@) ${logPath}
	hgsql -Ne 'select * from mgcGenes' ${DATABASE} | cut -f 2- > $@.tmp
	mv $@.tmp $@
${rawPath}/knownGene.gp:
	@mkdir -p $(dir $@) ${logPath}
	hgsql -Ne 'select * from knownGene' ${DATABASE} | cut -f 1-10 > $@.tmp
	mv $@.tmp $@
${rawPath}/knownGeneOld5.gp:
	@mkdir -p $(dir $@) ${logPath}
	hgsql -Ne 'select * from knownGeneOld5' ${DATABASE} | cut -f 1-10 > $@.tmp
	mv $@.tmp $@
${rawPath}/cpgIslandExt.gp: ${rawPath}/cpgIslandExt.bed
	@mkdir -p $(dir $@) ${logPath}
	bedToGenePred $< $@.tmp
	mv $@.tmp $@
${rawPath}/cpgIslandExt.bed: 
	@mkdir -p $(dir $@) ${logPath}
	hgsql -Ne 'select * from cpgIslandExt' ${DATABASE} |  cut -f 2-5 > $@.tmp
	mv $@.tmp $@
${rawPath}/ensGene.gp:
	@mkdir -p $(dir $@) ${logPath}
	hgsql -Ne 'select * from ensGene' ${DATABASE} | cut -f 2- > $@.tmp
	mv $@.tmp $@

clean:
	rm -rf ${rawPath}/ ${logPath}/ ${intPath}/ ${rootPath}/ ${statsPath}/ seq.rev annots.gff
